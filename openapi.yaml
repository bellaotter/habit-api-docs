openapi: 3.0.0
servers:
  - url: 'http://habit.swagger.io/v2'
  - url: ''
    description: ''
info:
  description: >-
    This is a HAB data API created using Planet Labs data. It's provides
    chlorophyl-a density identification and can be used for pro-active screening
    purposes and HAB awareness. 
  version: 1.0.0
  title: HABit
  termsOfService: ''
  contact:
    email: isabellaotterson@berkeley.edu
    name: Isabella Otterson
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags: []
paths:
  /levels:
    get:
      tags:
        - Level
      summary: Gets all levels.
      description: >-
        Gets all 4 chlorophyl-a levels (Oligotrophic, Mesotrophic, Eutrophic, &
        Hypereutrophic) and associated warning infos. 
      operationId: getAllLevels
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/level'
      parameters: []
  '/levels/{levelID}':
    get:
      summary: ''
      description: ''
      parameters:
        - name: levelID
          in: query
          required: false
          schema:
            type: string
          description: 'This is the ID of the chlorophyl-A concentration level. '
      operationId: getLevelByID
      responses:
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/level'
      tags:
        - Level
  /location:
    get:
      summary: 'Get all locations available. '
      description: Gets a list of all the locations available through the API.
      parameters: []
      operationId: getAllLocations
      responses:
        '200':
          description: Description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/location'
      tags:
        - Location
  '/location/{locationID}':
    get:
      summary: Get a location by locationID.
      description: ''
      parameters:
        - name: locationID
          in: query
          required: false
          schema:
            type: string
          description: The ID of a specific location.
      operationId: getLocationByID
      responses:
        default:
          description: Default response
      tags:
        - Location
  /bay:
    get:
      summary: Get a list of all the bays.
      description: 'Returns a list of all the bay objects available. '
      parameters: []
      operationId: getAllBays
      responses:
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bay'
      tags:
        - Bay
  '/bay/{bayID}':
    get:
      summary: Get a bay by its ID.
      description: Returns the bay object associated with the ID.
      parameters: []
      operationId: getBayByID
      responses:
        '200':
          description: Description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bay'
  '/satdata/{satdataID}':
    x-temp:
      summary: ''
      description: ''
      parameters: []
      operationId: getSatadatabyID
      responses:
        default:
          description: Default response
    get:
      summary: Get a satellite dataset by ID.
      description: ''
      parameters:
        - name: satdataID
          in: query
          required: false
          schema:
            type: string
          description: The ID of a specific satellite data set.
      operationId: getSatdataByID
      responses:
        default:
          description: Default response
      tags:
        - Satdata
  /satadata/findByBay:
    summary: Get satellite data from a specific bay.
    get:
      summary: Get satellite data by a specific Bay.
      description: ''
      parameters:
        - name: bayID
          in: query
          required: false
          schema:
            type: string
          description: The ID of a specific Bay.
      operationId: findByBay
      responses:
        '200':
          description: Description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/satellitedata'
      tags:
        - Satdata
  '/satadata/findByBay/{mostRecent}':
    summary: Get the most recent satellite data of a specific location.
    get:
      summary: ''
      description: ''
      parameters:
        - name: locationID
          in: query
          required: false
          schema:
            type: string
        - name: mostRecent
          in: query
          required: false
          schema:
            type: string
      operationId: findByBay
      responses:
        '200':
          description: Description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/satellitedata'
  '/satdata/findByLocation/{mostRecent}':
    get:
      summary: Find the most recent satellite data by location.
      description: ''
      parameters:
        - name: locationID
          in: query
          required: false
          schema:
            type: string
        - name: mostRecent
          in: query
          required: false
          schema:
            type: string
      operationId: findByLocationMostRecent
      responses:
        '200':
          description: Description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/satellitedata'
  /satdata/:
    get:
      summary: ''
      description: ''
      parameters:
        - name: mostRecent
          in: query
          required: false
          schema:
            type: string
            default: 'false'
          description: >-
            Determine whether we should retrieve the mostRecent satellite data
            recording for each bay. 
          allowEmptyValue: true
      operationId: getSatdata
      responses:
        '200':
          description: Description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/satellitedata'
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    level:
      type: object
      properties:
        levelID:
          type: string
        greaterThanEqual:
          type: string
        lessThan:
          type: int
        name:
          type: string
        nickname:
          type: string
        propername:
          type: string
        shortDescription:
          type: string
        longDescription:
          type: string
    satellitedata:
      type: object
      properties:
        dataID:
          type: string
        bayID:
          type: string
        chlor_a:
          type: int
        dateCaptures:
          type: timestamp
        geojson:
          type: geojson
        levelID:
          type: string
        levelNickname:
          type: string
        levelPropername:
          type: string
        levelName:
          type: string
        longDescription:
          type: string
        shortDescription:
          type: string
    bay:
      type: object
      properties:
        name: {}
        bayID:
          type: string
        coords:
          longitude: {}
          type: int
          latitude:
            'type:': int
    location:
      type: object
      properties:
        bayID:
          type: string
        coords:
          type: obj
          longitude:
            type: int
          latitude:
            type: int
        mostrecentDataID:
          type: string
        name:
          type: string
        locationID:
          type: string
  requestBodies:
    Pet:
      content:
        application/json:
          schema: {}
      description: Pet object that needs to be added to the store
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                username:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                password:
                  type: string
                phone:
                  type: string
                userStatus:
                  type: integer
                  format: int32
                  description: User Status
              xml:
                name: User
      description: List of user object
      required: true
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
    habit_auth:
      type: oauth2
      flows:
        password: {}
  links: {}
  callbacks: {}
security:
  - api_key: []
